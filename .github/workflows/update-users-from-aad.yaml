name: update users from AAD
# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  id-token: write # This is required for requesting the JWT
  contents: write # read is required for actions/checkout, write is required to create a release

jobs:
  sync-aad-usersrepos:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ssh-key: "${{ secrets.SSH_DEPLOY_KEY }}"

      # - name: "Az CLI login"
      #   uses: azure/login@v1
      #   with:
      #   #   client-id: ${{ secrets.AZURE_CLIENT_ID }}
      #   #   tenant-id: ${{ secrets.AZURE_TENANT_ID }}
      #   #   subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      #     # AD tenant 1, default directory (2 users in group, works as expected)
      #     # creds: '{"clientId":"${{ secrets.AZURE_CLIENT_ID }}","clientSecret":"${{ secrets.AZURE_CLIENT_SECRET }}","tenantId":"${{ secrets.AZURE_TENANT_ID }}"}'
      #     # Multi-tenant app
      #     creds: '{"clientId":"${{ secrets.A_CID }}","clientSecret":"${{ secrets.A_CS }}","tenantId":"${{ secrets.A_TID }}"}'
      #     # AD tenant 2 (no users in group, works as expected)
      #     # creds: '{"clientId":"${{ secrets.AZURE_CLIENT_ID_2 }}","clientSecret":"${{ secrets.AZURE_CLIENT_SECRET_2 }}","tenantId":"${{ secrets.AZURE_TENANT_ID_2 }}"}'
      #     allow-no-subscriptions: true
      - name: Sync users from AAD
        uses: jcantosz/update-teams/aad-user-sync@feat/group-by-id
        env:
          AZURE_TENANT_ID: "${{ secrets.MY_APP_TID }}"
          AZURE_CLIENT_ID: "${{ secrets.MY_APP_CID }}"
          AZURE_CLIENT_SECRET: "${{ secrets.MY_APP_CS }}"
          # AZURE_TENANT_ID: "${{ secrets.AZURE_TENANT_ID_2 }}"
          # AZURE_CLIENT_ID: "${{ secrets.AZURE_CLIENT_ID_2 }}"
          # AZURE_CLIENT_SECRET: "${{ secrets.AZURE_CLIENT_SECRET_2 }}"
        # uses: jcantosz/update-teams/aad-user-sync@main
      - name: setup git config
        run: |
          # setup the username and email. I tend to use 'GitHub Actions Bot' with no email by default
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"
      - name: commit
        run: |
          # Stage the file, commit and push
          git add .
          if ! git diff-index --quiet HEAD; then
            git commit -m "Group membership updates"
            git push origin main
          fi
